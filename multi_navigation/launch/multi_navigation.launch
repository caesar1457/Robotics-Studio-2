<launch>
    <arg name="verbose" default="false"/>
    <arg name="robot_namespace" default=""/>

    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="first_tb3"  default="tb3_0"/>
    <arg name="second_tb3" default="tb3_1"/>
    <arg name="third_tb3" default="tb3_2"/>

    <arg name="first_tb3_x_pos" default="0.0"/>
    <arg name="first_tb3_y_pos" default="0.5"/>
    <arg name="first_tb3_z_pos" default="0.0"/>
    <arg name="first_tb3_yaw"   default="0.0"/>

    <arg name="second_tb3_x_pos" default=" 0.0"/>
    <arg name="second_tb3_y_pos" default="-0.5"/>
    <arg name="second_tb3_z_pos" default=" 0.0"/>
    <arg name="second_tb3_yaw"   default=" 0.0"/>

    <!-- <arg name="third_tb3_x_pos" default=" 0.5"/>
    <arg name="third_tb3_y_pos" default=" 0.0"/>
    <arg name="third_tb3_z_pos" default=" 0.0"/>
    <arg name="third_tb3_yaw"   default=" 0.0"/> -->

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!-- lab_maps -->
        <arg name="world_name" value="$(find multi_navigation)/world/lab.world"/>
        <!-- test_maps -->
        <!-- <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world"/> -->
        
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>  

    <!-- lab_maps -->
    <arg name="map_file" default="$(env HOME)/catkin_ws/src/multi_navigation/maps/map.yaml" />
    <!-- test_maps -->
    <!-- <arg name="map_file" default="$(find turtlebot3_navigation)/maps/map.yaml"/> -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/>


    <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro'" />

    <!-- Loads robot_description to parameter server from URDF file-->
    <param name="robot_description" command="$(arg urdf_file)" />



    <!-- Launch the targets node -->
    <node name="targets" pkg="multi_navigation" type="targets.py" output="screen"/>



    <!-- 配置不同命名空间下的机器人 -->
    <group ns = "tb3_0">
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
            args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param robot_description" />

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0" />
            <param name="tf_prefix" value="tb3_0" />
        </node>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    </group>

    <group ns = "tb3_1">
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
            args="-urdf -model $(arg second_tb3) -x $(arg second_tb3_x_pos) -y $(arg second_tb3_y_pos) -z $(arg second_tb3_z_pos) -Y $(arg second_tb3_yaw) -param robot_description" />

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0" />
            <param name="tf_prefix" value="tb3_1" />
        </node>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    </group>

    <!-- <group ns = "tb3_2"> -->
        <!-- robot_description -->
        
        <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
            args="-urdf -model $(arg third_tb3) -x $(arg third_tb3_x_pos) -y $(arg third_tb3_y_pos) -z $(arg third_tb3_z_pos) -Y $(arg third_tb3_yaw) -param robot_description" /> -->

        <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0" />
            <param name="tf_prefix" value="tb3_2" />
        </node>       -->
        <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/> -->
        <!-- <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 /map car3/odom 100" /> -->
    <!-- </group> -->

    <!-- move_base配置 -->
    <include file="$(find multi_navigation)/launch/move_base.launch" >
        <arg name="robot_namespace" value="tb3_0" />
    </include>
    <include file="$(find multi_navigation)/launch/move_base.launch">
        <arg name="robot_namespace" value="tb3_1" />
    </include>
    <!-- <include file="$(find multi_navigation)/launch/move_base.launch" >
        <arg name="robot_namespace" value="tb3_2" />
    </include> -->


    <!-- amcl配置 -->
    <include file="$(find multi_navigation)/launch/amcl.launch">
        <rosparam file="$(find multi_navigation)/config/amcl_params.yaml" command="load" />
        <arg name="robot_namespace" value="tb3_0" />
        <arg name="initial_pose_x"  value="$(arg first_tb3_x_pos)"/>
        <arg name="initial_pose_y"  value="$(arg first_tb3_y_pos)"/>
        <arg name="initial_pose_a"  value="$(arg first_tb3_z_pos)"/>
        <!-- <arg name="odom_frame_id"   value="$(arg robot_namespace)/odom"/>
        <arg name="base_frame_id"   value="$(arg robot_namespace)/base_footprint"/> -->
    </include>
    <include file="$(find multi_navigation)/launch/amcl.launch">
        <rosparam file="$(find multi_navigation)/config/amcl_params.yaml" command="load" />
        <arg name="robot_namespace" value="tb3_1" />
        <arg name="initial_pose_x"  value="$(arg second_tb3_x_pos)"/>
        <arg name="initial_pose_y"  value="$(arg second_tb3_y_pos)"/>
        <arg name="initial_pose_a"  value="$(arg second_tb3_z_pos)"/>
        <!-- <arg name="odom_frame_id"   value="$(arg robot_namespace)/odom"/>
        <arg name="base_frame_id"   value="$(arg robot_namespace)/base_footprint"/> -->
    </include>
    <!-- <include file="$(find multi_navigation)/launch/amcl.launch">
        <rosparam file="$(find multi_navigation)/config/amcl_params.yaml" command="load" />
        <arg name="robot_namespace" value="tb3_2" />
        <arg name="initial_pose_x"  value="$(arg third_tb3_x_pos)"/>
        <arg name="initial_pose_y"  value="$(arg third_tb3_y_pos)"/>
        <arg name="initial_pose_a"  value="$(arg third_tb3_z_pos)"/> -->
        <!-- <arg name="odom_frame_id"   value="$(arg robot_namespace)/odom"/>
        <arg name="base_frame_id"   value="$(arg robot_namespace)/base_footprint"/> -->
    <!-- </include> -->
    
    <!-- 启动rviz -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find multi_navigation)/rviz/nav_multi.rviz"/>
</launch>
